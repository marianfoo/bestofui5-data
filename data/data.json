{"packages":[{"name":"generator-ui5-control","version":"0.0.2","description":"yeoman-based (sub-)generator for a UI5 custom control","scripts":{"test":"jest __tests__","test:manual":"cd test/ui5-app && ui5 serve"},"keywords":["ui5","custom control","notepad control","yeoman generator"],"author":"Volker Buzek <volker.buzek@js-soft.com>","repository":{"type":"git","url":"https://github.com/ui5-community/generator-ui5-control.git"},"license":"other","dependencies":{"chalk":"^4.1.0","yeoman-generator":"^4.13.0","yosay":"^2.0.2"},"devDependencies":{"@types/jest":"^26.0.20","jest":"^26.6.3","yeoman-assert":"^3.1.1","yeoman-test":"^5.1.0"},"type":"generator","tags":["control"],"gitHubOwner":"ui5-community","gitHubRepo":"generator-ui5-control","forks":0,"stars":2,"addedToBoUI5":"2022-04-14T00:00:00.007Z","createdAt":"2021-02-06T08:04:48Z","updatedAt":"2021-03-29T19:36:53Z","githublink":"https://github.com/ui5-community/generator-ui5-control/tree/main/","readme":"# generator for a UI5 custom control\n\nScaffold a UI5 custom control that is structured in such a way that it can also distributed as a `node` module via `npm`.  \nMainly intended for re-use via [`easy-ui5`](https://github.com/SAP/generator-easy-ui5), but also suitable to run standalone.\n\n## use w/ `easy-ui5`\n\ndo `yo easy-ui5` and select this generator when prompted\n\n## use w/ yeoman locally/standalone\n\n![generating a ui5 custom control](./generate-ui5-control.gif)\n\n```bash\n$> npm i -g yo\n$> yo ./path-to-this-repo/app\n\n     _-----_     â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®\n    |       |    â”‚  Welcome to the amazing  â”‚\n    |--(o)--|    â”‚   UI5 custom control     â”‚\n   `---------Â´   â”‚        generator!        â”‚\n    ( _Â´U`_ )    â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯\n    /___A___\\   /\n     |  ~  |\n   __'.___.'__\n Â´   `  |Â° Â´ Y `\n\n? What's the name space your custom control(s) should live in? (my.ui5.cc)\n```\n\n## use w/ options supplied\n\n```bash\n$> yo ./path-to-this-repo/app --controlNamespace=bla.fasel --buildDir=../some/dir\n# will make the control live in namespace 'bla.fasel\"\n# and put the built control in directory `cwd` + '../some/dir'\n```\n\n## aftermath\n\nthe generator also provides a full dev- and test-environment for your new and shiny custom control ðŸ˜± !\n\n```bash\n$> cd path/to/generator/result\n$> npm run test:manual\n# ...\ninfo normalizer:translators:ui5Framework Using OpenUI5 version: 1.86.3\ninfo server:custommiddleware:livereload Livereload server started!\nServer started\nURL: http://localhost:8081\n```\n\nAs obvious from the above, the `manual` test command boots up a barebones UI5 app using your new custom control, inclusing live reload capabilites. So once you edit the control, the app auto-reloads and changes are visible immediately.\n\n```bash\n$> npm run test\n# ...\n PASS  test/ui5-app/basic.test.js\n  my.ui5.cc.Control\n    âœ“ should find the my.ui5.cc.Control in index.html (36 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        1.103 s\nRan all test suites.\n```\n\n## test for the generator\n\nall tests are located in `__tests__`.  \n`jest` is used as test framework and runner.\n\n## contributing\n\n- as of now: stick to `yo` v3 (not 5) and `yeoman-generator` v4.x (not 5) due to incompatability issues\n- use the `prettier` config in `.prettierrc` in this repo\n- please supply an additional test per new feature and/or fixed bug\n","downloadsCurrentMonth":-1,"downloadsCurrentFortnight":-1,"downloads365":-1}],"tags":[{"name":"generator","count":1,"type":"type"},{"name":"control","count":1,"type":"tag"}]}